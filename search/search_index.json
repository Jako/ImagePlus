{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Image+","text":"<p>Image+ is an advanced image template for MODx Revolution. The dimensions for the uploaded image can be configured (optionally) to restrict a minimum width and/or height. Image cropping can be forced to stay within a preset ratio. A graphical tool can be used to resize the image to the desired dimensions/proportions.</p>"},{"location":"#requirements","title":"Requirements","text":"<ul> <li>MODX Revolution 2.6+</li> <li>PHP 7.1+</li> <li>MODX Cropping Engine i.e. pThumb</li> </ul>"},{"location":"#features","title":"Features","text":"<ul> <li>Visual tool for cropping images, integrated with MODX Manager interface.</li> <li>Option to restrict minimum width and/or height for uploaded image.</li> <li>User image cropping can be forced to stay at preset ratio.</li> <li>Use chunk as output mask and fill placeholders with url, height, width, alt   tag, phpthumb options etc. of cropped uploaded image.</li> </ul>"},{"location":"#license","title":"License","text":"<p>The project is licensed under the GPLv2 license.</p>"},{"location":"#translations","title":"Translations","text":"<p>Translations of the package can be made for the Default Lexicon, the Properties Lexicon and the System Setting Lexicon</p>"},{"location":"contributors/","title":"Contributors","text":"<p>The Image+ project was started in 2012 by Alan Pich and is maintained and developed further since 2015 by Thomas Jakobi.</p> <p>Many thanks to all who contributed, whether by creating pull requests, submitting bug reports, or donating.</p>"},{"location":"examples/","title":"Examples","text":"<p>Image+ can be used for various purposes. On this page you will find some examples of how it can be used:</p>"},{"location":"examples/#collections","title":"Collections","text":"<p>You can display the Image+ thumbnail in a column of the Collections grid by setting the column's renderer to ImagePlus.MIGX_Renderer.</p>"},{"location":"examples/#migx","title":"MIGX","text":"<p>If you want to use Image+ in MIGX, you can configure all Image+ TV properties with a JSON string in the Configs textarea in the MIGX formtabs field. The following properties are possible:</p> <pre><code>{\n\"targetWidth\":\"\",\n\"targetHeight\":\"\",\n\"targetRatio\":\"\",\n\"thumbnailWidth\":\"\",\n\"allowAltTag\":\"\",\n\"allowCaption\":\"\",\n\"allowCredits\":\"\"\n}\n</code></pre> <p>You also need to change the Input TV Type to <code>imageplus</code>.</p> <p>You can display the thumbnail in the grid column by setting the renderer to ImagePlus.MIGX_Renderer. In earlier versions of MIGX, you need to edit a MIGX configuration to do this.</p> <p>To use this Image+ MIGX field in the frontend, call the ImagePlus Snippet where the value parameter is the name of the MIGX field:</p> <pre><code>[[ImagePlus? \n  &amp;value=`[[+migxImagePlusField]]`\n]]\n</code></pre> <p>This will give you the prepared URL for the cropped image instead of the raw JSON object.</p>"},{"location":"examples/#getresourcespdoresources","title":"getResources/pdoResources","text":"<p>In order for the TV to be parsed using the getResources/pdoResources snippet, you need to add the following lines to your getResources/pdoResources call Snippet* call:</p> <pre><code>&amp;includeTVs=`name_of_your_tv`\n&amp;processTVs=`name_of_your_tv`\n</code></pre> <p>In the template chunk of the getResources/pdoResources snippet call, you can use the placeholder <code>[[+tv.name_your_TV]]</code> if the TV's Output Type is set to <code>Image+</code>. Without any further changes, the placeholder will contain the URL of the cropped image.</p>"},{"location":"examples/#using-the-imageplus-snippet-in-the-getresourcespdoresources-template-chunk","title":"Using the ImagePlus snippet in the getResources/pdoResources template chunk","text":"<p>In your template chunk for calling getResources/pdoResources Snippet, you need to add a parameter so that the ImagePlus Snippet call knows the origin ID from which to retrieve data:</p> <pre><code> &amp;docid=`[[+id]]`\n</code></pre> <p>Here is an example of a call and configuration, where image is your Image+ TV:</p> <p>Snippet Call <pre><code>&lt;div class=\"blog-articles\"&gt;\n[[!pdoPage?\n    &amp;element=`pdoResources`\n    &amp;tpl=`tplBlogPost`\n    &amp;limit=`11`\n    &amp;includeContent=`1`\n    &amp;showHidden=`0`\n    &amp;hideContainers=`1`\n]]\n&lt;/div&gt;\n&lt;div class=\"blog-paging\"&gt;\n  [[!+page.nav]]\n&lt;/div&gt;\n</code></pre></p> <p>Chunk tplBlogPost</p> <pre><code>&lt;article class=\"post\"&gt;\n    &lt;header class=\"post-header\"&gt;\n        &lt;h3 class=\"post-title mt0 mb1\"&gt;&lt;a href=\"[[~[[+id]]]]\"&gt;[[+longtitle:default=`[[+pagetitle]]`]]&lt;/a&gt;&lt;/h3&gt;\n\n    [[ImagePlus? \n        &amp;tvname=`image` \n        &amp;type=`tpl` \n        &amp;docid=`[[+id]]`\n        &amp;tpl=`tplBlogIntroImg`\n    ]] \n\n    &lt;/header&gt;\n    &lt;section class=\"post-excerpt\"&gt;\n         &lt;p&gt;[[+content:striptags:ellipsis=`255`:typography]]\n         &lt;a class=\"read-more\" href=\"[[~[[+id]]]]\"&gt;read more \u00bb&lt;/a&gt;&lt;/p&gt;\n    &lt;/section&gt;\n    &lt;footer class=\"post-meta\"&gt;\n        &lt;span class=\"post-author\"&gt;[[+createdby:userinfo=`fullname`]]&lt;/span&gt;\n        &lt;time class=\"post-date\" datetime=\"[[+publishedon:date=`%B %e, %Y`]]\"&gt;[[+publishedon:date=`%B %e, %Y`]]&lt;/time&gt;\n    &lt;/footer&gt;\n&lt;/article&gt;\n</code></pre> <p>Chunk tplBlogIntroImg</p> <pre><code>&lt;div class=\"feature\" style=\"margin-bottom:1rem\"&gt;\n    &lt;a href=\"[[+caption]]\"&gt;&lt;img src=\"[[+source.src:pthumb=`w=320`]]\" alt=\"[[+alt]]\" /&gt;&lt;/a&gt;\n&lt;/div&gt;\n</code></pre>"},{"location":"examples/#responsive-images","title":"Responsive images","text":"<p>If you want to display responsive images with and without the crop, you can use the ImagePlus Snippet.</p> <p>Snippet Call <pre><code>[[ImagePlus? \n&amp;tvname=`yourtvname` \n&amp;type=`tpl` \n&amp;options=`&amp;w=320`\n&amp;tpl=`tplResponsiveImage`\n&amp;pagetitle=`[[*pagetitle]]`\n]]\n</code></pre></p> <p>Chunk tplResponsiveImage <pre><code>&lt;picture&gt;\n    &lt;source media=\"(min-width: 36em)\"\n            srcset=\"[[+source.src:pthumb=`w=1024`]] 1024w,\n                [[+source.src:pthumb=`w=640`]] 640w,\n                [[+source.src:pthumb=`w=320`]] 320w\"\n            sizes=\"33.3vw\"/&gt;\n    &lt;source srcset=\"[[+source.src:pthumb=`[[+crop.options]]&amp;w=640`]] 2x,\n                [[+source.src:pthumb=`[[+crop.options]]&amp;w=320`]] 1x\"/&gt;\n    &lt;img src=\"[[+url]]\" alt=\"[[+alt:default=`[[+pagetitle]]`]]\"/&gt;\n&lt;/picture&gt;\n</code></pre></p>"},{"location":"getting-started/","title":"Getting Started","text":""},{"location":"getting-started/#create-a-new-template-variable","title":"Create a new template variable","text":"<p>Once Image+ is installed, you can create template variables [TV] in the usual way, but instead of setting the Input Type in the Input Options to Image, choose Image+ instead.</p> <p>For most use cases, you should also set the Output Type in the Output Options to Image+. This allows you to control the image output on a resource.</p>"},{"location":"getting-started/#the-cropping-tool","title":"The cropping tool","text":"<p>When using an Image+ TV, you can select an image in the same way as you would with a regular Image TV. Once an image is selected, a cropping window will appear where you can select the area of the image to use. The original image is not changed. So you can upload a single image and reuse it in multiple places on the website at different sizes (and crops with multiple Image+ TVs).</p> <p>If you want to change the cropping area, you need to click the crop trigger of the Image+ TV.</p> <p>In the cropping window you need to drag the handles of the dotted box to change the cropping area. If the TV has been configured with size constraints or an aspect ratio, the cropping area will be limited to that aspect ratio.</p>"},{"location":"installation/","title":"Installation","text":""},{"location":"installation/#install-from-modx-extras","title":"Install from MODX Extras","text":"<p>Search for Image+ in the Package Manager of your MODX installation and install it in there.</p>"},{"location":"installation/#manual-installation","title":"Manual installation","text":"<p>If you can't access the MODX Extras Repository in your MODX installation, you can manually install Image+.</p> <ul> <li>Download the transport package from MODX Extras (or one of the pre-built transport packages in _packages)</li> <li>Upload the zip file to your MODX installation's <code>core/packages</code> folder or upload it manually in the MODX Package Manager.</li> <li>In the MODX Manager, navigate to the Package Manager page, and select 'Search locally for packages' from the dropdown button.</li> <li>Image+ should now show up in the list of available packages. Click the corresponding 'Install' button and follow the instructions to complete the installation.</li> </ul>"},{"location":"installation/#build-it-from-source","title":"Build it from source","text":"<p>To build and install the package from source you could use Git Package Management. The GitHub repository of Image+ contains a config.json to build that package locally. Use this option, if you want to debug Image+ and/or contribute bugfixes and enhancements.</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#input-options","title":"Input Options","text":"<p>In Image+ you can control the final size and aspect ratio of selected images. For an Image+ TV, several advanced input options are available:</p>"},{"location":"usage/#target-heightwidth","title":"Target Height/Width","text":"<p>Images can be constrained to a minimum height and/or width with Target Height and Target Width. If both values are set, the target aspect ratio of the output image will be calculated with these values. Both fields must be filled with an integer value.</p>"},{"location":"usage/#target-aspect-ratio","title":"Target Aspect Ratio","text":"<p>The aspect ratio for the output image can be restricted with Target aspect ratio. If target height and target width are specified, this value is ignored and the calculated aspect ratio of target height and target width is used. The field must be filled with a float value.</p> <p>If you specify only a value for Target Height or Target Width and leave Target Aspect Ratio blank, the size of the crop is not constrained to any aspect ratio.</p> <p>How to calculate the aspect ratio</p> <p>The aspect ratio contains a floating point value: this value can be easily determined by dividing any width with the desired aspect ratio by the corresponding height. For example, suppose you want all your crops to have the same aspect ratio as an image of size \"1600x1000\", then simply divide \"1600\" by \"1000\", which gives the value \"1.6\". This is the value for your aspect ratio.</p>"},{"location":"usage/#show-alt-tag-field","title":"Show Alt Tag Field","text":"<p>Image+ TVs can also contain an Alt Tag field which is an additional text input that is stored with each image. It can be output next to the image i.e. as an alt tag or title tag.</p> <p>To output the alt text in an Image+ TV placeholder, you need to select a chunk in the Output Options. You can also use the ImagePlus snippet and specify a template chunk in the snippet call options. The alt text is entered in the <code>[[+alt]]</code> placeholder in this chunk.</p>"},{"location":"usage/#show-caption-field","title":"Show Caption Field","text":"<p>Image+ TVs can also include a Caption Div, which is an additional text input that is stored with each image. This can be output below the image, i.e. in an additional caption div.</p> <p>To output the caption in an Image+ TV placeholder, you must select a chunk in the Output Options. You can also use the ImagePlus snippet and specify a template chunk in the call options of the snippet. The caption will be inserted into the <code>[[+caption]]</code> placeholder in that chunk.</p>"},{"location":"usage/#show-credits-field","title":"Show Credits Field","text":"<p>Image+ TVs can also include a Credits field, which is an additional text input stored with each image. It can be output below the image, for example in an additional credits field.</p> <p>To output the credits in an Image+ TV placeholder, you must select a chunk in the Output Options. You can also use the ImagePlus snippet and specify a template chunk in the snippet's call options. The credits are inserted into the <code>[[+credits]]</code> placeholder in that chunk.</p>"},{"location":"usage/#contextsystem-settings","title":"Context/System Settings","text":"<p>Each Image+ TV Input Option can be replaced by a context or system setting. And context/system settings can be defined for a single TV.</p> <p>There are predefined system settings in the <code>imageplus</code> namespace which are empty or zero. If you activate one of them or fill it with a value, this setting will override the input options of all image+ TVs. Context settings must be created before they can be used.</p> Key Name Description Default imageplus.allow_alt_tag Show Alt Tag Field Allow user to enter a title/alt-tag for the image. No imageplus.allow_caption Show Caption Field Allow user to enter a caption for the image. No imageplus.allow_credits Show Credits Field Allow user to enter a credit for the image. No imageplus.debug Debug Log debug information in the MODX error log. No imageplus.force_config Force predefined crop sizes/aspect ratios Force the usage of predefined crop size/aspect ratios. No imageplus.select_config Predefined crop sizes/aspect ratios Create predefined crop size/aspect ratios that are selectable in the template variable options. [] imageplus.target_height Target Height Constrain the target images to a minimal height. - imageplus.target_ratio Target Aspect Ratio Restrict the target images to a aspect ratio. - imageplus.target_width Target Width Constrain the target images to a minimal width. - imageplus.thumbnail_width Thumbnail Width The thumbnail width of the image in the template variable panel. - <p>The global context/system settings have the prefix <code>imageplus.</code> and the individual TV context/system settings have the prefix <code>imageplus.{tvname}.</code>. <code>{tvname}</code> must be replaced with the name of the template variable.</p> <p>The order for these settings is <sup>1</sup>.</p> <ul> <li>TV name based context setting</li> <li>TV name based system setting</li> <li>context setting</li> <li>system setting</li> </ul> <p>In the <code>imageplus.select_config</code> system setting, you can create predefined internal forces/aspect ratios with an auxiliary grid. To force the use of the predefined sizes/ratios, you can activate the system setting <code>imageplus.force_config</code>.</p>"},{"location":"usage/#output-options","title":"Output Options","text":"<p>Several advanced output options are available for an Image+ TV:</p>"},{"location":"usage/#additional-phpthumb-parameters","title":"Additional phpThumb Parameters","text":"<p>By default, an Image+ TV returns a relative URL to a cropped (and possibly constrained) image scaled by phpThumb. This output option allows you to assign several additional phpThumb parameters that will be generated to create the thumbnail image.</p>"},{"location":"usage/#output-chunk","title":"Output Chunk","text":"<p>When you select an Output Chunk, the TV output is rendered using that chunk. Select the name of the chunk from the drop-down menu. Multiple placeholders are possible in this chunk to customize the output:</p> Placeholder Description alt Alt text crop.height Crop height of the thumbnail image crop.options Crop engine crop option string to generate the thumbnail image crop.width Crop width of the thumbnail image crop.x Crop x position of the thumbnail image crop.y Crop y position of the thumbnail image height Minimal height of the thumbnail image options Crop engine full option string to generate the thumbnail image source.height Height of the source image source.src Full path of the source image on the server (not a URL) source.width Width of the source image url URL of the thumbnail image width Minimal width of the thumbnail image <p>All these placeholders can be used in the Snippet too.</p>"},{"location":"usage/#generate-thumb-url","title":"Generate Thumb URL","text":"<p>If you create the thumbnail in the output chunk, i.e. through a pthumb output filter, you can disable the generation of the internal thumb URL.</p> <p>Caution</p> <p>You must enable this option if you do not specify an output chunk in the output options or if you use the <code>[[+url]]</code> placeholder in the specified output chunk. Otherwise, the image will not be cropped/truncated and the original image path will be returned.</p>"},{"location":"usage/#thumb-url-issues","title":"Thumb URL Issues","text":"<p>If you use Image+ in a multiple language site with different base URL context settings, you have to set the system setting <code>phpthumbof.cache_url</code> to <code>/</code>. Otherwise, the generated thumbnail path will contain the <code>{base_url}</code> prefix.</p>"},{"location":"usage/#snippet","title":"Snippet","text":"<p>The snippet gives you a second way to display the TV value. With template variable output you are limited to one output chunk per template variable, with the snippet you can be more flexible and use different output chunks. The following properties can be set in the snippet call:</p> Property Description Default docid Resource where the Image+ TV value is received from. - options Extended phpThumb options for the image. - tpl Template chunk for the snippet output. ImagePlus.image tvname Name of the Image+ TV. - type Type of the snippet output. Could be set to check tpl and thumb. -"},{"location":"usage/#example","title":"Example","text":"<pre><code>[[ImagePlus?\n&amp;tvname=`imageplus`\n&amp;docid=`1`\n&amp;options=`w=100`\n&amp;type=`tpl`\n&amp;tpl=`ImagePlus.demo`\n]]\n</code></pre> <p>This snippet call returns the contents of the template variable named <code>imageplus</code> of resource <code>1</code> and the extended phpThumb option <code>&amp;w=100</code> (width: 100px) in the parsed <code>ImagePlus.demo</code> chunk.</p> <ol> <li> <p>The first entry supercedes the second entry in the list etc.\u00a0\u21a9</p> </li> <li> <p>Outputs image if the Image+ TV contains an image, otherwise noimage.\u00a0\u21a9</p> </li> <li> <p>Outputs the parsed template set by tpl property for retreived Image+ TV value (with additional options set by the options property)\u00a0\u21a9</p> </li> <li> <p>Outputs the thumbnail URL for retreived Image+ TV value (with additional options set by the options property)\u00a0\u21a9</p> </li> <li> <p>See phpThumb readme for possible options. Maybe not all options are valid in your installation (because of crop engine limitations or server restricions).\u00a0\u21a9</p> </li> <li> <p>The template chunk placeholder are the same as in the output chunk of the template variable.\u00a0\u21a9</p> </li> </ol>"}]}